<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Widget-tricks on Codelibrary</title>
    <link>https://codelibrary.opendatasoft.com/widget-tricks/</link>
    <description>Recent content in Widget-tricks on Codelibrary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Aug 2020 15:57:58 +0200</lastBuildDate>
    
	<atom:link href="https://codelibrary.opendatasoft.com/widget-tricks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Catalog cards</title>
      <link>https://codelibrary.opendatasoft.com/widget-tricks/catalog-cards/</link>
      <pubDate>Mon, 24 Aug 2020 15:57:58 +0200</pubDate>
      
      <guid>https://codelibrary.opendatasoft.com/widget-tricks/catalog-cards/</guid>
      <description>Custom catalog card  The catalog card represents the published datasets of that portal. (see Exploring a dataset from the catalog).
The platform allows to customize the catalog cards displayed in the catalog of the portal, by providing custom HTML and CSS to override the default version. This resource propose different versions and technical tricks that can be used to highlighted datasets by keywords or theme for example.</description>
    </item>
    
    <item>
      <title>SVG Maps</title>
      <link>https://codelibrary.opendatasoft.com/widget-tricks/svg-maps/</link>
      <pubDate>Mon, 24 Aug 2020 15:57:58 +0200</pubDate>
      
      <guid>https://codelibrary.opendatasoft.com/widget-tricks/svg-maps/</guid>
      <description>Static maps, a quick introduction  When your goal is to share a precise analysis of a theme, such as employment or demography, for given administrative territories, you may want to disable all interactions with the map. You will even probably want to have overseas territories right next to the other territories in order to visualize immediately how the measurement varies across these administrative areas.
In this situation, you might prefer a static colored picture over a classic map widget.</description>
    </item>
    
    <item>
      <title>ODS Analysis</title>
      <link>https://codelibrary.opendatasoft.com/widget-tricks/ods-analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codelibrary.opendatasoft.com/widget-tricks/ods-analysis/</guid>
      <description>Ods-analysis, a quick intro  The technical documentation says :
This widget exposes the results of an analysis (as an object containing a results array and optionally an aggregations object) in a variable available in the scope. It can be used with AngularJS&amp;rsquo;s ngRepeat to simply build a table of analysis results.
Normal people would say :
Ods-analysis is the way to get the values behind a chart ! What you can do with a chart, you can do the same with ods-analysis.</description>
    </item>
    
    <item>
      <title>Ods-color-gradient</title>
      <link>https://codelibrary.opendatasoft.com/widget-tricks/ods-color-gradient/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codelibrary.opendatasoft.com/widget-tricks/ods-color-gradient/</guid>
      <description>ods-color-gradient + ods-map : a choropleth alternative  This map rendering technique allows to display on a map colored shaped based on the aggregation of a different dataset.
One dataset contains the data to make some statistical computation (Avg, sum, counting of numerical fields) and one dataset contains geographical information (geo shapes).
The technique is very similar to a join at processing time, to enrich statistical data with geographical data. The only prerequisit is, like for a regular join, having a shared key between datasets to make the numerical aggregation match its geo shape.</description>
    </item>
    
  </channel>
</rss>